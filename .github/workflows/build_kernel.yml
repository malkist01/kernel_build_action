name: Build Kernel

on:
  workflow_dispatch:
    inputs:
      device:
          description: 'samsung'
          required: true
      repo:
          description: 'https://github.com/malkist01/nethunter_a7_2016.git'
          required: true
      branch:
          description: '18.1'
          required: true
      token:
          description: 'Telegram bot token'
          default: '7596553794:AAGoeg4VypmUfBqfUML5VWt5mjivN5-3ah8'
          required: true
      chat_id:
          description: 'Telegram chat id'
          default: '-1002287610863'
          required: true


env:
  TZ: Asia/Jakarta
  DEVICE: ${{ github.event.inputs.device }}
  REPO: ${{ github.event.inputs.repo }}
  BRANCH: ${{ github.event.inputs.branch }}
  GKI: ${{ github.event.inputs.gki }}
  token: ${{ github.event.inputs.token }}
  chat_id: ${{ github.event.inputs.chat_id }}

jobs:
  kernel-build:
    runs-on: ubuntu-22.04

    steps:
      - name: Initializing environment
        run: |
          git config --global user.name "sirnewbies"
          git config --global user.email "yusromi04@gmail.com"
          df -h
          ld --version
          gcc -v
          ar --version
          sudo apt update
          sudo apt install -y bc bison build-essential ccache curl flex glibc-source g++-multilib gcc-multilib binutils-aarch64-linux-gnu git gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev liblz4-tool libncurses5 libncurses5-dev libsdl1.2-dev libssl-dev libwxgtk3.0-gtk3-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev python2 tmate ssh neofetch
          neofetch

      - name: Compiling
        run: |
          if [ "${DEVICE}" = "tissot" ]; then
            wget https://raw.githubusercontent.com/sirnewbies/kernel_build_action/main/scripts/tissot_build_script.sh
            bash tissot_build_script.sh
          elif [ "${DEVICE}" = "tissot-mainline" ]; then
            wget https://raw.githubusercontent.com/sirnewbies/kernel_build_action/main/scripts/tissot-mainline_build_script.sh
            bash tissot-mainline_build_script.sh
          elif [ "${DEVICE}" = "topaz" ]; then 
            wget https://raw.githubusercontent.com/sirnewbies/kernel_build_action/main/scripts/topaz_build_script.sh
            bash topaz_build_script.sh
          elif [ "${DEVICE}" = "sweet" ]; then
            wget https://raw.githubusercontent.com/sirnewbies/kernel_build_action/main/scripts/sweet_build_script.sh
            bash sweet_build_script.sh
          else
            echo "Device not supported yet"
          fi


